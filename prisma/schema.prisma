generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Decision {
  uuid           String @id
  stepInputUuid  String
  stepOutputUuid String
  title          String
  stepInput      Step   @relation("inputDecision", fields: [stepInputUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_step_input")
  stepOutput     Step   @relation("outputDecision", fields: [stepOutputUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_step_output")
}

model Step {
  uuid           String     @id
  storyUuid      String
  waypointUuid   String?
  assetId        String?
  description    String
  media          Media?
  title          String
  ending         Ending?
  inputDecision  Decision[] @relation("inputDecision")
  outputDecision Decision[] @relation("outputDecision")
  gameStep       GameStep[]
  story          Story      @relation(fields: [storyUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_story")
  waypoint       Waypoint?  @relation(fields: [waypointUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_waypoint")
}

model Story {
  uuid        String  @id @default(uuid())
  active      Boolean @default(false)
  assetId     String?
  description String
  title       String
  game        Game[]
  step        Step[]
}

model User {
  uuid  String  @id
  email String?
  game  Game[]
}

model Game {
  uuid       String     @id
  storyUuid  String
  userUuid   String
  createdAt  DateTime   @default(now())
  deletedAt  DateTime?
  finishedAt DateTime?
  story      Story      @relation(fields: [storyUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_story")
  user       User       @relation(fields: [userUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
  gameStep   GameStep[]
}

model GameStep {
  gameUuid   String
  stepUuid   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  finishedAt DateTime?
  latitude   Float
  longitude  Float
  step       Step      @relation(fields: [stepUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_step")
  game       Game      @relation(fields: [gameUuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_story")

  @@id([gameUuid, stepUuid])
}

model Waypoint {
  uuid      String  @id
  placeType String?
  step      Step[]
}

enum Ending {
  SUCCESS
  FAILURE
}

enum Media {
  AUDIO
  IMAGE
  VIDEO
}
